class Solution{
	public:
	
	//2 --- greater than m
	//0 ---- lesser than m
	//1----- equal
	int pow(int mid, int n, int m){
	    long long ans = 1;
	    for(int j = 0; j < n; j++){
	        ans = ans*mid;
	        if(ans > m){
	            return 2;
	        }
	    }
	    
	    if(ans == m){
	        return 1;
	    }
	    
	    return 0;
	}
	
	int NthRoot(int n, int m)
	{
	    int low = 1;
	    int high = m;
	    
	    int ans;
	    
	    while(low <= high){
	        int mid = (low + high)/2;
	        if(pow(mid, n, m) == 1){
	            return mid;
	        }
	        
	        else if(pow(mid, n, m) == 2){
	            high = mid - 1;
	        }
	        
	        else{
	            low = mid + 1;
	        }
	    }
	    
	    return -1;
	}  
};
